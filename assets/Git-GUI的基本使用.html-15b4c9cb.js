import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as a,e as d}from"./app-21d4bb55.js";const t={},r=d(`<p>一般在安装完Git以后，右键菜单，不止会有Git Bash Here，还会有一个Git GUI Here，这个GUI界面我觉得可能会更加易用，这里以我搭建这个网站为例。</p><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><h3 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h3><p>当然，你需要安装Git，以及拥有一个准备上传的文件夹。</p><p>随后，在需要上传的文件夹中右键<code>Git GUI Here</code>，会自动弹出一个GUI界面，大概有如下几个选项：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Create New Repository
Clone Existing Repository
Open Existing Repository
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里省略一些步骤，假设你已经配置好了全局的Email和UserName，并且你已经创建好了对应的仓库。</p><h3 id="克隆仓库" tabindex="-1"><a class="header-anchor" href="#克隆仓库" aria-hidden="true">#</a> 克隆仓库</h3><p>选择提供的三个仓库的<code>Clone Existing Repository</code>，你会跳转到另外一个页面，大概形式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>...
Source Location: ___
Target Directory: ___
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Source</code>其实就是你的仓库地址，可以直接在你的仓库找到；<code>Target</code>就是目标文件夹，会把你的仓库克隆到这个仓库当中。后面的选项不用管，直接点击Clone按钮即可。</p><p>当然，如果你已经克隆好了仓库，可以直接在存在.git文件夹的目录下使用<code>Git GUI Here</code>，跳过这一步骤。</p><h3 id="上传文件" tabindex="-1"><a class="header-anchor" href="#上传文件" aria-hidden="true">#</a> 上传文件</h3><p>这个时候请把注意力放在右下角的输入框部分。首先，点击一下<code>Rescan</code>按钮，对文件夹进行扫描，如果出现新的、更改了的文件，那么就会提示你的。</p><p>随后，点击下一个按钮，<code>Stage Changed</code>，用处不详，不过还是建议点击，具体用处可以去查找相关资料、文档。</p><p>下一个按钮，<code>Sign Off</code>，用于证明谁是提交的作者，其主要目的是改善对谁做了什么的追踪，尤其是补丁。可以不用点击，跳过即可。</p><p>随后，在标题为<code>&quot;Commit Message&quot;</code>输入框中，输入提交的内容，比如本次更新为什么或者什么。然后点击Commit按钮即可。</p><p>最后，点击<code>Push</code>按钮，会打开一个新的对话框，你可以选择上传的分支，以及上传的相关设定，最常用的是下面的<code>Force overwrite existing branch</code>，进行强制提交，防止一些奇怪的报错。</p><p>这个时候，回到你的仓库当中，你就可以看到刚刚提交的文件啦~</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>于我而言，GUI界面比Bash界面要好用很多，毕竟都是可视化的了，不需要打开终端输入代码。</p><p>当然，如果需要，可以试试Github Desktop之类的软件，可能会更加好用一些。</p>`,22),n=[r];function o(c,s){return i(),a("div",null,n)}const h=e(t,[["render",o],["__file","Git-GUI的基本使用.html.vue"]]);export{h as default};
