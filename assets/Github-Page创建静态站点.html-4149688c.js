import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as d,c as t,b as e,d as a,a as o,e as r}from"./app-21d4bb55.js";const c={},l=r(`<p>创建静态站点前，你需要首先拥有一个Github账号，直接注册登录即可。</p><p>然后，你需要在自己的计算机上安装Git，可以直接前往官网进行下载。</p><h2 id="相关设定" tabindex="-1"><a class="header-anchor" href="#相关设定" aria-hidden="true">#</a> 相关设定</h2><h3 id="创建自己的仓库" tabindex="-1"><a class="header-anchor" href="#创建自己的仓库" aria-hidden="true">#</a> 创建自己的仓库</h3><p>这个仓库的名称很特殊，假设你的用户名为<code>A</code>，那么这个仓库的名称为<code>A.github.io</code>。</p><p>创建完成后，打开仓库的<code>Settings</code>，选择<code>Pages</code>进行相关的配置，比如设定个人域名之类的。</p><h3 id="配置git" tabindex="-1"><a class="header-anchor" href="#配置git" aria-hidden="true">#</a> 配置Git</h3><p>你拥有了一个静态网站，打开这个网站的文件夹，打开控制台。</p><p>首先，输入下面的指令，配置你自己的个人配置。这里的global表示的是全局配置，一次配置全局生效。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name A
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email A@gmail.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置ssh" tabindex="-1"><a class="header-anchor" href="#配置ssh" aria-hidden="true">#</a> 配置SSH</h3><p>SSH可以理解为一种密钥，主要是帮助Github判断是否是你本人用的。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&quot;A@gmail.com&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>会提示你输入一些东西，不过这些东西都不用管，直接按两下空格就行。</p><p>然后，通过<code>cat</code>指令查看刚刚生成的文件的内容：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> ~/.ssh/id_rsa.pub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>复制输出的所有内容，回到Github。先点击右上角自己的头像，选择<code>settings</code>，在弹出的页面当中选择<code>SSH and GPG keys</code>，再点击右上角的<code>New SSH key</code>，起一个名字再把刚才复制的内容粘贴进去即可。</p><h3 id="关联本地文件夹与远程仓库" tabindex="-1"><a class="header-anchor" href="#关联本地文件夹与远程仓库" aria-hidden="true">#</a> 关联本地文件夹与远程仓库</h3><p>在网站文件夹中，输入<code>git init</code>进行初始化，随后进行链接自己的仓库：<code>git remote add origin git@github.com:moutsea/git-tutorial.git</code>，这个链接其实就是仓库的地址。</p><p>随后，使用命令把分支进行关联，这里的main可以是其他分支，根据具体情况使用。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch --set-upstream-to<span class="token operator">=</span>origin/main main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="提交文件" tabindex="-1"><a class="header-anchor" href="#提交文件" aria-hidden="true">#</a> 提交文件</h3><p>首先，你需要提交以下文件，使用add命令全部提交即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后，使用commit命令，设置本次提交的说明：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;提交的说明&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后使用强制提交进行提交即可，因为静态网站，不需要管其他的什么。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push <span class="token parameter variable">-u</span> origin main <span class="token parameter variable">-f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="deploy一下" tabindex="-1"><a class="header-anchor" href="#deploy一下" aria-hidden="true">#</a> Deploy一下</h3><p>回到Github的仓库，打开<code>Actions</code>选项卡，选择<code>New workflow</code>，往下滑找到<code>Static HTML</code>，点击<code>Configure</code>即可，后面就是确定，点绿色按钮就行√</p>`,30),p={href:"http://xn--A-t14b19b555btlk.github.io",target:"_blank",rel:"noopener noreferrer"},h=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),a(" 总结")],-1),u=e("p",null,"完成第一次工作后，就很简单了：",-1),b=e("ol",null,[e("li",null,"编写网页"),e("li",null,"git add添加，git commit设置，git pull提交"),e("li",null,"Github去Deploy一下")],-1),g=e("p",null,"就是三步走而已",-1);function m(v,_){const s=i("ExternalLinkIcon");return d(),t("div",null,[l,e("p",null,[a("等待编译完成后，打开你设定好的网址，"),e("a",p,[a("或者直接A.github.io"),o(s)]),a("，就可以访问自己的静态网站啦~")]),h,u,b,g])}const x=n(c,[["render",m],["__file","Github-Page创建静态站点.html.vue"]]);export{x as default};
