import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as l,b as e,d as a,a as n,e as r}from"./app-21d4bb55.js";const d="/assets/1-507c5169.png",c="/assets/2-b0a508cc.png",p="/assets/3-3b736d30.png",h="/assets/4-4fae946e.png",f="/assets/5-9d5d65f3.png",u="/assets/6-5c63c434.png",g="/assets/7-58a54b10.png",b="/assets/8-d8c40fd7.png",_="/assets/9-8e1164d4.png",m="/assets/10-cb527644.png",y="/assets/11-bd9745c9.png",v="/assets/12-34469b34.png",x="/assets/13-2b6ddfe0.png",k="/assets/14-998f6d95.png",w="/assets/15-561ca5fa.png",P={},S=r('<h2 id="什么是paas" tabindex="-1"><a class="header-anchor" href="#什么是paas" aria-hidden="true">#</a> 什么是PaaS？</h2><p>平台即服务（PaaS）是一种云计算形式，它提供了一个平台，允许消费者通过广域网（WAN）或Internet开发和部署应用程序和服务。消费者不管理或维护底层平台软件，中间件和云基础架构。</p><p>因为把东西运行在自己的服务器上可能会因为服务器到期、被攻击或者自己不小心折腾坏环境等原因，导致自己的网站下线。为了追求的最快的速度与稳定性，使用PaaS平台就可以满足需求了~</p><h2 id="好用的paas平台" tabindex="-1"><a class="header-anchor" href="#好用的paas平台" aria-hidden="true">#</a> 好用的PaaS平台</h2><h3 id="web" tabindex="-1"><a class="header-anchor" href="#web" aria-hidden="true">#</a> Web</h3>',5),z={href:"https://fly.io/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://vercel.com/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://www.koyeb.com/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://railway.app/",target:"_blank",rel:"noopener noreferrer"},G={href:"https://www.netlify.com/",target:"_blank",rel:"noopener noreferrer"},D={href:"https://render.com/",target:"_blank",rel:"noopener noreferrer"},L={href:"https://deno.com/deploy",target:"_blank",rel:"noopener noreferrer"},N={href:"https://replit.com/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://cloud.tencent.com/product/sls",target:"_blank",rel:"noopener noreferrer"},C={href:"https://workers.cloudflare.com/",target:"_blank",rel:"noopener noreferrer"},V=e("h3",{id:"数据库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数据库","aria-hidden":"true"},"#"),a(" 数据库")],-1),R={href:"https://upstash.com/",target:"_blank",rel:"noopener noreferrer"},B={href:"https://planetscale.com/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://www.mongodb.com/atlas/database",target:"_blank",rel:"noopener noreferrer"},j={href:"https://supabase.com/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://neon.tech/",target:"_blank",rel:"noopener noreferrer"},K=e("h2",{id:"服务-具体使用方法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#服务-具体使用方法","aria-hidden":"true"},"#"),a(" 服务&具体使用方法")],-1),M=e("p",null,"在这里我会按照顺序介绍上面的各种平台以及具体使用的方法或者案例",-1),O={id:"fly-io",tabindex:"-1"},T=e("a",{class:"header-anchor",href:"#fly-io","aria-hidden":"true"},"#",-1),U={href:"http://Fly.io",target:"_blank",rel:"noopener noreferrer"},H=e("blockquote",null,[e("p",null,"首先说明，使用这个玩意现在是必须要有信用卡的，不然用不了")],-1),J={href:"http://fly.io",target:"_blank",rel:"noopener noreferrer"},Q=e("code",null,"Dockerfile",-1),X=r(`<p>下面直接搭建一个简单的程序应用吧，就当演示了</p><h4 id="安装flyctl" tabindex="-1"><a class="header-anchor" href="#安装flyctl" aria-hidden="true">#</a> 安装flyctl</h4><p>这个是一个在自己电脑运行的工具，用来和fly的服务器链接，以及传输代码之类的。</p><p>对于MacOS，可以用下面的命令进行安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> flyctl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对于Linux是这个：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-L</span> https://fly.io/install.sh <span class="token operator">|</span> <span class="token function">sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Windows下需要使用<code>PowerShell</code>运行下面的命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pwsh <span class="token parameter variable">-Command</span> <span class="token string">&quot;iwr https://fly.io/install.ps1 -useb | iex&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果发现报错，找不到pwsh，那么可以选择更新最新的PowerShell，或者可以用下面的指令代替：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>iwr https://fly.io/install.ps1 <span class="token parameter variable">-useb</span> <span class="token operator">|</span> iex
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装是一次性的，安装完后就不用再管了；如果需要确认是否安装，可以使用<code>flyctl version</code>来查看。</p><h4 id="创建并登陆账号" tabindex="-1"><a class="header-anchor" href="#创建并登陆账号" aria-hidden="true">#</a> 创建并登陆账号</h4><p>创建账号：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fly auth signup
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>会弹出一个网页，可以通过邮箱或者Github进行注册。注册完成后可以用下面的命令登录，但是应该会自动登陆的吧：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fly auth login
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="在本地搭建好需要使用的程序" tabindex="-1"><a class="header-anchor" href="#在本地搭建好需要使用的程序" aria-hidden="true">#</a> 在本地搭建好需要使用的程序</h4><p>这里我直接用我的SeSe API作为程序了，再写一遍有点累，这里直接上就好~</p><p>反正只要你的程序可以开放一个端口给别人访问，基本上就可以说OK了。</p>`,20),Y={id:"部署到fly-io",tabindex:"-1"},Z=e("a",{class:"header-anchor",href:"#部署到fly-io","aria-hidden":"true"},"#",-1),$={href:"http://xn--Fly-7j2ez28rj5va.io",target:"_blank",rel:"noopener noreferrer"},ee=r(`<p>在写好的程序目录下面，输入这个指令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fly launch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>随后会进入一个交互式界面，按顺序提交就好，随后再输入下面的指令进行部署：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fly deploy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>成功后，使用<code>fly open</code>打开浏览器，就可以正常访问啦~如果后续需要修改源代码，可以进行多次的deploy，对应的也会生成新的版本，从v0开始。</p><h3 id="vercel" tabindex="-1"><a class="header-anchor" href="#vercel" aria-hidden="true">#</a> Vercel</h3><p>个人使用是免费的，并且提供了域名访问，使用非常方便快捷。下面一样，直接部署一个项目出来~</p><h4 id="注册vercel" tabindex="-1"><a class="header-anchor" href="#注册vercel" aria-hidden="true">#</a> 注册Vercel</h4><p>直接在官网进行注册就好，有下面这些注册的方式：</p><figure><img src="`+d+'" alt="1" tabindex="0" loading="lazy"><figcaption>1</figcaption></figure><p>当然，随后也是需要手机号注册的，这个正常注册就好~注册完成后应该可以看到一个这样的界面：</p><figure><img src="'+c+'" alt="2" tabindex="0" loading="lazy"><figcaption>2</figcaption></figure><h4 id="部署项目" tabindex="-1"><a class="header-anchor" href="#部署项目" aria-hidden="true">#</a> 部署项目</h4><p>咳咳咳，这里还是一样，直接使用我自己的API作为案例吧，首先在刚刚那个<code>Clone Template</code>选项菜单里面，搜索<code>Python</code>，选择第一个就好~</p><figure><img src="'+p+'" alt="3" tabindex="0" loading="lazy"><figcaption>3</figcaption></figure><p>然后选择<code>Deploy</code>选项，按照给的顺序做就好~</p><p>首先你需要创建一个Git仓库，主要是可以更加方便的部署项目，可以参考下图：</p><figure><img src="'+h+'" alt="4" tabindex="0" loading="lazy"><figcaption>4</figcaption></figure><p>随后点击创建就好，让它工作一会；随后我们可以打开自己的Github，找到这样的一个新仓库：</p><figure><img src="'+f+'" alt="5" tabindex="0" loading="lazy"><figcaption>5</figcaption></figure><p>这个<code>api</code>文件夹就是源代码储存的地方啦，直接把自己的源代码放进去就好（运行的主程序应该为<code>index.py</code>），随后应该会自动进行编译部署，再次访问官方给的链接就可以哩！</p><blockquote><p>不过，国内貌似访问不了了，原因呵呵，懂得都懂~ 毕竟你在这里，你就必须遵守这里的法律</p><p>另外，我的API因为使用了Fast API库，所以应该是访问不了滴，如果你的程序没有使用其他的库或许可以正常使用？</p><p>反正看控制台就好，如果报错应该都能看懂吧</p></blockquote><h3 id="netlify" tabindex="-1"><a class="header-anchor" href="#netlify" aria-hidden="true">#</a> Netlify</h3><p>这个是一个类似Github Page，但是有比Github Page更强的静态网站托管服务，这里直接用我自己的博客做一个案例吧。</p><h4 id="创建账号" tabindex="-1"><a class="header-anchor" href="#创建账号" aria-hidden="true">#</a> 创建账号</h4><p>这个我不多说了吧？直接官网注册登录就好~，随后正常选择，这里我用的是Github进行登录，然后或许你可以看到一个这样的页面：</p><figure><img src="'+u+'" alt="6" tabindex="0" loading="lazy"><figcaption>6</figcaption></figure><h4 id="deploy" tabindex="-1"><a class="header-anchor" href="#deploy" aria-hidden="true">#</a> Deploy</h4><p>我这里直接选择我的<code>github.io</code>，随后点击<code>Deploy</code>就好~成功以后可以看到这样的情况：</p><figure><img src="'+g+'" alt="7" tabindex="0" loading="lazy"><figcaption>7</figcaption></figure><p>然后按照官方的方法正常继续就好，直接在这个网页上按照顺序就是~</p><ol><li>Customize site name，首先确认网站域名，直接输入想要的域名就好，比如我想要的域名是<code>KaedeLab</code>，那么我的网站可以通过<code>kaedelab.netlify.app</code>来访问~（真的可以访问哦）</li><li>Deploy Again，这个只是一个提示，就是只要你更新仓库，那么自动就会更新网页啦，非常方便的！</li><li>设置自定义的domain，这个可以通过阿里云之类的购买域名，然后在这里设置，具体使用方法我会在另外一个文章提到。</li></ol><p>其他的不多说了，自己看吧？毕竟这个就是一个静态网站部署，自己摸索摸索才能真正学会如何使用的吧！</p><h3 id="railway" tabindex="-1"><a class="header-anchor" href="#railway" aria-hidden="true">#</a> Railway</h3><p>Railway提供免费容器服务。支持主流语言python、nodejs等直接运行，支持Dockerfile在线构建docker镜像。支持使用CLI部署。此外，还提供大量模板直接构建。例如code server（vscode网页版）等。</p><ul><li>不自动休眠，不自动删数据（手动重新部署当然会删），支持自定义域名，自动SSL加密。</li><li>提供数据库支持，部署完成之后添加数据库插件即可。</li><li>按量付费，每个月5美元免费额度，跑个小程序够用。具体可以参考定价。</li></ul><blockquote><p>注意，现在这个也是需要绑定银行卡的哩，烦死了！不过我还是在这里记录完整的使用方法~</p><p>当然，正常使用还是可以不使用银行卡的，就比如下面这个案例，我部署了自己的SeSeAPI</p></blockquote><h4 id="注册-登录" tabindex="-1"><a class="header-anchor" href="#注册-登录" aria-hidden="true">#</a> 注册&amp;登录</h4><p>我这里直接用Github一键登录了，方便一些~注册完成并且同意各种许可以后你会看到一个这样的页面：</p><figure><img src="'+b+'" alt="8" tabindex="0" loading="lazy"><figcaption>8</figcaption></figure><h4 id="部署项目-1" tabindex="-1"><a class="header-anchor" href="#部署项目-1" aria-hidden="true">#</a> 部署项目</h4><p>这里直接创建新项目就好，我这里老样子，使用我的FastAPI项目进行部署，直接选择从模板构建，搜索<code>FastAPI</code>即可：</p><figure><img src="'+_+'" alt="9" tabindex="0" loading="lazy"><figcaption>9</figcaption></figure><p>选择后继续，创建需要的仓库就好~然后点击<code>Deploy</code>，接下来就是等待了，等待完成后应该可以看到这样的场景：</p><figure><img src="'+m+'" alt="10" tabindex="0" loading="lazy"><figcaption>10</figcaption></figure><p>这个时候已经可以通过域名直接访问啦~就是那个绿色的。</p><h4 id="上传代码" tabindex="-1"><a class="header-anchor" href="#上传代码" aria-hidden="true">#</a> 上传代码</h4><p>这个不多说了吧？要么用Git工具，要么直接上传代码文件就好，我这里使用Git Bash进行上传：</p><figure><img src="'+y+'" alt="11" tabindex="0" loading="lazy"><figcaption>11</figcaption></figure><p>上传完后，Railway会自动的进行再部署，直接等待一会尝试访问即可~</p>',50),ae={href:"https://sese.up.railway.app/",target:"_blank",rel:"noopener noreferrer"},ie=r('<h3 id="cloud-flare" tabindex="-1"><a class="header-anchor" href="#cloud-flare" aria-hidden="true">#</a> Cloud Flare</h3><p>这个是一个非常好的静态网站托管平台，还会给一个免费的域名！本网站现在就托管在这里啦~</p><figure><img src="'+v+'" alt="12" tabindex="0" loading="lazy"><figcaption>12</figcaption></figure><p>这个的使用方法很简单，先进行注册，注册后登录账号即可，随后你可以看到如下的页面：</p><figure><img src="'+x+'" alt="13" tabindex="0" loading="lazy"><figcaption>13</figcaption></figure><p>点击左边侧边栏的<code>Pages</code>选项卡，随后你可以看到如下页面：</p><figure><img src="'+k+'" alt="14" tabindex="0" loading="lazy"><figcaption>14</figcaption></figure><p>随后正常创建应用程序就好，按照步骤啦即可，你可以从自己的Github同步，也可以手动的上传图片，都可以滴，不过注意一下，这里我选择的是<code>Pages</code>，不是<code>Workers</code></p><figure><img src="'+w+'" alt="15" tabindex="0" loading="lazy"><figcaption>15</figcaption></figure><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他...</h3><p>上面介绍的这些应该已经足够使用了，其他的我暂时没有用到，如果需要的话自行去官方学习吧？反正上面官网链接都给出来啦~</p>',11);function ne(re,se){const i=t("ExternalLinkIcon");return o(),l("div",null,[S,e("ul",null,[e("li",null,[e("a",z,[a("Fly.io"),n(i)])]),e("li",null,[e("a",I,[a("Vercel"),n(i)])]),e("li",null,[e("a",A,[a("Koyeb"),n(i)])]),e("li",null,[e("a",F,[a("Railway"),n(i)])]),e("li",null,[e("a",G,[a("Netlify"),n(i)])]),e("li",null,[e("a",D,[a("Render"),n(i)])]),e("li",null,[e("a",L,[a("Deno"),n(i)])]),e("li",null,[e("a",N,[a("Replit"),n(i)])]),e("li",null,[e("a",q,[a("腾讯云SLS"),n(i)])]),e("li",null,[e("a",C,[a("CloudFlare"),n(i)])])]),V,e("ul",null,[e("li",null,[e("a",R,[a("UpStash"),n(i)])]),e("li",null,[e("a",B,[a("PlanetScale"),n(i)])]),e("li",null,[e("a",W,[a("Mongodb"),n(i)])]),e("li",null,[e("a",j,[a("Supabase"),n(i)])]),e("li",null,[e("a",E,[a("Neon"),n(i)])])]),K,M,e("h3",O,[T,a(),e("a",U,[a("Fly.io"),n(i)])]),H,e("p",null,[e("a",J,[a("fly.io"),n(i)]),a(" 是一个容器化的部署平台，只需要一个"),Q,a("文件就能部署代码到fly.io的服务器上，同时还自动生成域名。")]),X,e("h4",Y,[Z,a(),e("a",$,[a("部署到Fly.io"),n(i)])]),ee,e("p",null,[a("这里我的API部署好啦，直接"),e("a",ae,[a("访问"),n(i)]),a("就好~")]),ie])}const le=s(P,[["render",ne],["__file","将网站托管于PaaS平台.html.vue"]]);export{le as default};
