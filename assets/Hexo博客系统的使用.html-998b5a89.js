import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e as n}from"./app-21d4bb55.js";const i={},d=n(`<p><code>Solo</code>，<code>WordPress</code>，要么就是需要登录系统，要么就是需要安装一堆的插件来维护。对于我这种只是需要一个稳定，本地且可分享的写作平台的人，我还是选择使用Hexo进行写作。主要原因有：</p><ol><li>所有文章为本地的MarkDown文件，不容易出现数据丢失的情况</li><li>可以非常方便的转换为静态站点，并进行发布</li><li>符合程序员的使用习惯，同时自定义性比较高，可以自行修改代码，优化博客</li></ol><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><p>首先，在电脑上安装Nodejs，然后打开一个终端，按顺序输入下列指令：(#代表注释，不用输入)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> hexo-cli <span class="token parameter variable">-g</span> <span class="token comment"># 安装Hexo</span>
hexo init blog <span class="token comment"># 初始化一个博客文件夹，会自动创建一个文件夹的</span>
<span class="token builtin class-name">cd</span> blog <span class="token comment"># 进入文件夹</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token comment"># 安装依赖项</span>
hexo server <span class="token comment"># 启动博客</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成上述步骤以后，终端会给你一个本地链接，大概样子为<code>localhost:XXXX</code>，直接在浏览器中打开，就可以看到自己的博客啦！</p><h3 id="写博客" tabindex="-1"><a class="header-anchor" href="#写博客" aria-hidden="true">#</a> 写博客</h3><p>打开博客文件夹<code>blog</code>，你会找到一个<code>source</code>文件夹，这个文件夹会存放你的页面，博客以及草稿。在blog文件夹中打开终端，输入如下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hexo new post 文章名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待创建完成，即可在<code>source/_posts/</code>文件夹下面找到你的博客文件，直接进行书写即可(使用MarkDown语法，这里不做解释)</p><p>当然，也有和MarkDown不太一样的地方，在每个博客的开头有如下代码片段：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>---
title: Hello World
date: 2023/4/15
---
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是Hexo的Front-matter，具体使用见官方链接。这个东西的用途其实就是告诉Hexo这篇文章的一些性质，比如title文章标题，date编辑日期等等。</p><h3 id="更换主题" tabindex="-1"><a class="header-anchor" href="#更换主题" aria-hidden="true">#</a> 更换主题</h3><p>如果一开始博客的样子不好看，那么可以自行更换主题，打开博客文件夹<code>blog</code>下的<code>_config.yml</code>文件，找到theme设置项，你会看到上面官方给了链接，点进去查看下载即可。</p><h4 id="具体下载步骤" tabindex="-1"><a class="header-anchor" href="#具体下载步骤" aria-hidden="true">#</a> 具体下载步骤：</h4><ol><li>进入官方主题库</li><li>选择合适的主题，进入对于的Github仓库</li><li>直接下载仓库，或者选择对应的release版本下载</li><li>下载到本地，解压缩到themes文件夹中，比方说下载的主题是A，那么这时博客目录为blog/themes/A/主题文件</li><li>打开config文件，将theme冒号后面改为A即可</li></ol><h3 id="主题的自定义" tabindex="-1"><a class="header-anchor" href="#主题的自定义" aria-hidden="true">#</a> 主题的自定义</h3><p>一般来说，下载后的主题中也是有一个<code>config</code>文件的，直接打开按照注释修改即可；这里只记录一些特殊情况</p><ol><li>主题文件中，如果需要使用本地图片，那么图片的路径为<code>/img/A.jpg</code>，这里的img绝对路径为<code>C:XXXX/blog/themes/A/source/img</code>，当然，也可以直接使用链接</li><li>博客中的<code>Home: /</code>配置，Home可以是任何字符，中文也是可以的。</li><li>一定要仔细阅读注释，别人的主题，当然要相信别人的注释，不然自己研究是研究不透的！</li></ol><h3 id="友链页面-tags页面的制作" tabindex="-1"><a class="header-anchor" href="#友链页面-tags页面的制作" aria-hidden="true">#</a> 友链页面/Tags页面的制作</h3><p>有的时候你会看到页面无法显示，只会告诉你<code>Cannot get /tags/</code>之类的话。其实这就是因为找不到这个页面，直接创建即可。这里介绍两种最常见的页面。</p><h4 id="创建tags页面" tabindex="-1"><a class="header-anchor" href="#创建tags页面" aria-hidden="true">#</a> 创建tags页面</h4><p>首先，直接blog目录中控制台，输入下面内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建一个页面</span>
hexo new page <span class="token string">&quot;tags&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后打开tags文件夹，修改index.md的内容：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>---
type: &quot;tags&quot;
layout: &quot;tags&quot;
comments: false
---
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，就可以正常通过<code>/tags/</code>访问啦。</p><h4 id="创建categories页面" tabindex="-1"><a class="header-anchor" href="#创建categories页面" aria-hidden="true">#</a> 创建categories页面</h4><p>同理，但是不需要这么多东西，首先命令创建页面</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hexo new page <span class="token string">&quot;categories&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后修改index文件为:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>---
type: categories
---
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>即可。</p><h3 id="导出为静态页面" tabindex="-1"><a class="header-anchor" href="#导出为静态页面" aria-hidden="true">#</a> 导出为静态页面</h3><p>这一步其实就是相当于发布了，可以直接查看官方的方法，一键包什么的，或者直接通过一条命令转换，也很简单：<code>hexo g</code></p><h2 id="结尾" tabindex="-1"><a class="header-anchor" href="#结尾" aria-hidden="true">#</a> 结尾</h2><p>那么，现在你可以正常进行写作，创作啦！这里我只进行了简单的介绍，如果需要了解更多可以去看官方文档，文档会提供更多的技巧</p>`,39),l=[d];function o(c,t){return a(),s("div",null,l)}const p=e(i,[["render",o],["__file","Hexo博客系统的使用.html.vue"]]);export{p as default};
